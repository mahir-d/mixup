<!DOCTYPE html>
<html>

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" 
  integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
  <style>
    body {
      font-family: Arial, Helvetica, sans-serif;
    }

    /* The Modal (background) */
    .modal {
      display: none;
      /* Hidden by default */
      position: absolute;
      /* Stay in place */
      z-index: 1;
      /* Sit on top */
      padding-top: 150px;
      /* Location of the box */
      left: 0;
      top: 0;
      width: 100%;
      /* Full width */
      height: 100%;
      /* Full height */
      overflow: auto;
      /* Enable scroll if needed */
      background-color: rgb(0, 0, 0);
      /* Fallback color */
      background-color: rgba(0, 0, 0, 0.4);
      /* Black w/ opacity */
    }

    /* Modal Content */
    .modal-content {
      background-color: #fefefe;
      margin: auto;
      padding: 20px;
      border: 1px solid #888;
      width: 80%;
    }

    /* The Close Button */
    .close {
      color: #aaaaaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
    }

    .close:hover,
    .close:focus {
      color: #000;
      text-decoration: none;
      cursor: pointer;
    }
    .myBtn {
      position:absolute;
  background-color: #4CAF50;
  border: none;
  color: white;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  margin: 4px 2px;
  cursor: pointer;
}
.playlistName{
font-size:18pt;
     height:48px;
     width:400px;
}
.labelname{
  font-size: large;
  font-style: normal;
}


.topnav {
  overflow: hidden;
  background-color: #333;
}

.topnav a {
  float: left;
  color: #f2f2f2;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
  font-size: 20px;
}

.topnav a:hover {
  background-color: #ddd;
  color: black;
}

.topnav a.active {
  background-color: #4CAF50;
  color: white;
}

.topnav-right {
  float: right;
}
  </style>
</head>

<body>

  <nav class="topnav">
  
 
  <div class="topnav-right">
    <a href="/views/pages/discoverPage.handlebars">Discover</a>
    <a href="#">Log Out</a>
  </div>
</nav>



  {{!-- <form id="youtubeForm" method="GET" action="/homePage/youtube">
    <button id="youtubebtn">youtube Player</button>
  </form> --}}

  <!-- Trigger/Open The Modal -->
  <button id="myBtn" class="myBtn">Create Playlist</button>

  <!-- The Modal -->
  <div id="myModal" class="modal">

    <!-- Modal content -->
    <div class="modal-content">
      <span class="close">&times;</span>
      <p class="labelname">Add Playlist Name</p>
      <form action="/playlist/create" method="post">
        <input type="text" placeholder="Playlist Name" id="playlistName" name="playlistName" class="playlistName"required>
        <button type="submit"class="myBtn" id="addplaylist">Create playlist</button>
        <div>
  <span style=  "color:red; font-size:x-large;">{{error}}</span>
</div>
      </form>
    </div>
  </div>

  <script>
    // Get the modal
    var modal = document.getElementById("myModal");

    // Get the button that opens the modal
    var btn1 = document.getElementById("myBtn");
    var btn2 = document.getElementById("addplaylist");
    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];

    
    // When the user clicks the button, open the modal 
    btn1.onclick = function () {
      modal.style.display = "block";
    }
    //will call the create playlist route

    // When the user clicks on <span> (x), close the modal
    span.onclick = function () {
      modal.style.display = "none";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
      if (event.target == modal) {
        modal.style.display = "none";
      }
    }
  </script>

</body>

</html>



{{!-- <main> --}}



{{!-- <script src="https://sdk.scdn.co/spotify-player.js"></script>
  <script>
    window.onSpotifyWebPlaybackSDKReady = () => {
      // You can now initialize Spotify.Player and use the SDK
      { { #if accessToken} }
      var player = new Spotify.Player({
        name: 'MixUp Player',
        getOAuthToken: callback => {


          callback('{{accessToken}}');
        },
        volume: 0.5
      });

      player.connect().then(success => {
        if (success) {
          console.log('The Web Playback SDK successfully connected to Spotify!');
        }
      })

      player.addListener('ready', ({ device_id }) => {
        console.log('The Web Playback SDK is ready to play music!');
        console.log('Device ID', device_id);
      })

      {
        {
          /if}}
        };
  </script>












  <form action="/spotify/search" method="POST">
    <label for="searchBar">Search:</label>
    <input type="text" name="searchbar" id="searchBar">
    <button type="submit" id="submitButton">submit</button>
  </form>

  <button id="sPlayBtn" class="Spotify">click me to play</button>




  <script>
        $(document).ready(function () {
          var playBtn = $("#sPlayBtn");
          $(playBtn).click(function () {
            $.ajax({
              method: 'GET',
              url: '/spotify/play/spotify:album:6Fr2rQkZ383FcMqFyT7yPr',
              success: function () {
                console.log("song played successfully");
              },
              error: function (message) {
                window.location.href = "http://localhost:3000/user/signin";
              }
            })
          })
        })
  </script>



  

</main> --}}